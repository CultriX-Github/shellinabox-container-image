#!/bin/bash

# Enable strict mode for better error handling.
set -euo pipefail

# Function to generate a random hexadecimal string.
hex() {
    openssl rand -hex 8
}

echo "Preparing container..."

# Base command for running Shell in a Box.
COMMAND="shellinaboxd --debug --no-beep --disable-peer-check -u ${SIAB_USER} -g ${SIAB_GROUP} -c /var/lib/shellinabox -p ${SIAB_PORT} --user-css ${SIAB_USERCSS}"
# Constructs the base command to start Shell in a Box with specified user, group, port, and CSS.

# Install additional packages if specified.
if [ "$SIAB_PKGS" != "none" ]; then
    sudo dnf install -y "$SIAB_PKGS"
    # Installs the packages specified in SIAB_PKGS, using sudo.
    sudo dnf clean -y all
    # Cleans up the dnf cache using sudo.
fi

# Disable SSL if SIAB_SSL is not true.
if [ "$SIAB_SSL" != "true" ]; then
    COMMAND+=" -t"
    # Adds the -t flag to the Shell in a Box command to disable SSL.
fi

# Create a user if SIAB_ADDUSER is true.
if [ "${SIAB_ADDUSER}" == "true" ]; then
    # Generate a random password if the default password is used.
    if [ "${SIAB_PASSWORD}" == "putsafepasswordhere" ]; then
        SIAB_PASSWORD=$(hex)
        echo "Autogenerated password for user ${SIAB_USER}: ${SIAB_PASSWORD}"
    fi
    # Set the user's password.
    echo "${SIAB_USER}:${SIAB_PASSWORD}" | chpasswd
    # Sets the password for the created user using chpasswd.
    unset SIAB_PASSWORD
    # Unsets the password variable for security.
fi

# Add services to the Shell in a Box command.
for service in ${SIAB_SERVICE}; do
    COMMAND+=" -s ${service}"
    # Adds each service specified in SIAB_SERVICE to the Shell in a Box command.
done

# Function to download and execute a script if SIAB_SCRIPT is specified.
#
# Parameters:
#   SIAB_SCRIPT: The URL of the script to be downloaded and executed.
#
# Return:
#   None. If the script fails to download or execute, the function will exit with a non-zero status.
#
# Description:
#   This function checks if SIAB_SCRIPT is not set to "none". If it is not, the function attempts to download the script
#   from the specified URL using curl. If the download is successful, the script is made executable and then executed.
#   If any step fails, an error message is printed and the function exits with a non-zero status.
if [ "$SIAB_SCRIPT" != "none" ]; then
    if ! curl -s -k "$SIAB_SCRIPT" > /prep.sh; then
        echo "Error downloading script: $SIAB_SCRIPT"
        exit 1
    fi
    chmod +x /prep.sh
    echo "Running $SIAB_SCRIPT..."
    if ! /prep.sh; then
        echo "Error running script: $SIAB_SCRIPT"
        exit 1
    fi
fi

echo "Starting container..."

# Execute Shell in a Box or the provided command.
#
# Parameters:
#   $1: The first argument passed to the script. If it is "shellinabox", the script will execute the Shell in a Box command.
#       Otherwise, the script will execute the provided command.
#   $*: All arguments passed to the script.
#
# Return:
#   None. The script will exit with a non-zero status if an error occurs during execution.
#
# Description:
#   This block of code checks if the first argument passed to the script is "shellinabox". If it is, the script will
#   execute the Shell in a Box command stored in the COMMAND variable. If the first argument is not "shellinabox", the
#   script will execute the provided command. If any error occurs during execution, an error message is printed and the
#   script exits with a non-zero status.
if [ "$1" = "shellinabox" ]; then
    echo "Executing: $COMMAND"
    exec "$COMMAND"
else
    echo "Executing: $*"
    exec "$@"
fi
